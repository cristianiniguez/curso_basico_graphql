type Course {
  _id: ID!
  title: String!
  teacher: String
  description: String!
  topic: String
  people: [Student]
}

type Student {
  _id: ID!
  name: String!
  email: String!
}

type Query {
  "Retorna todos los cursos"
  getCourses: [Course]
  "Retorna un curso"
  getCourse(_id: ID!): Course
  "Retorna todos los estudiantes"
  getStudents: [Student]
  "Retorna un estudiante"
  getStudent(_id: ID!): Student
}

input CourseCreateInput {
  title: String!
  teacher: String
  description: String!
  topic: String
}

input CourseUpdateInput {
  title: String
  teacher: String
  description: String
  topic: String
}

input StudentCreateInput {
  name: String!
  email: String!
}

input StudentUpdateInput {
  name: String
  email: String
}

type Mutation {
  "Crea un curso"
  createCourse(input: CourseCreateInput!): Course
  "Edita un curso"
  updateCourse(_id: ID!, input: CourseUpdateInput): Course
  "Elimina un curso"
  deleteCourse(_id: ID!): ID
  "Crea un estudiante"
  createStudent(input: StudentCreateInput!): Student
  "Edita un estudiante"
  updateStudent(_id: ID!, input: StudentUpdateInput): Student
  "Elimina un estudiante"
  deleteStudent(_id: ID!): ID
  "Agrega una persone a un curso"
  addPeople(courseID: ID!, personID: ID!): Course
}
